create table restaurante_sede(
	cnpj bigint primary key,
	nome_real varchar(40) not null,
	nome_fantasia varchar(40)
);
--FOREIGN KEY (campo) REFERENCES tabela (id_tabela)

create table restaurante_unidade(
	endereco varchar(40) primary key
);


create table sede_unidade(
	cnpj bigint,
	endereco varchar(40),
	foreign key (cnpj) references restaurante_sede(cnpj),
	foreign key(endereco) references restaurante_unidade (endereco)
);

create table horario(
	horario_id serial primary key,
	comeco time not null,
	fim time not null,
	dia date
);

create table horario_unidade(
	horario_id int,
	endereco varchar(40),,
	FOREIGN KEY (horario_id) REFERENCES horario (horario_id),
	FOREIGN KEY (endereco) REFERENCES restaurante_unidade (endereco)
);

create table regiao(
	bairro varchar(40) primary key
);

create table regiao_unidade(
	bairro varchar(40),
	endereco varchar(40),
	FOREIGN KEY (bairro) REFERENCES regiao (bairro),
	FOREIGN KEY (endereco) REFERENCES restaurante_unidade (endereco)
);

create table tipo_comida(
	tipo varchar(40) primary key
);

create table tipo_unidade(
tipo varchar(40),
endereco varchar(40),
FOREIGN KEY (tipo) REFERENCES tipo_comida (tipo),
FOREIGN KEY (endereco) REFERENCES restaurante_unidade (endereco)
);

create table telefone(
	telefone bigint primary key
);

create table telefone_unidade(
	numero bigint,
	endereco varchar(40),
	FOREIGN KEY (numero) REFERENCES telefone (telefone),
	FOREIGN KEY (endereco) REFERENCES restaurante_unidade (endereco)

);

create table refeicao(
refeicao_id serial primary key,
descricao varchar(150) not null,
preco float not null,
disponibilidade numeric(1,0)
);

create table refeicao_unidade(
refeicao_id int,
endereco varchar(40),
FOREIGN KEY (refeicao_id) REFERENCES refeicao (refeicao_id),
FOREIGN KEY (endereco) REFERENCES restaurante_unidade(endereco)
);

create table humano(
cpf bigint primary key,
rg bigint not null,
nome varchar(40) not null,
bairro_humano varchar(40),
endereco_humano varchar(40)
);

create table cartao(
numero_cartao bigint primary key,
cpf bigint,
meiopagamento_id int,
validade date not null,
nome_titular varchar(40) not null,
FOREIGN KEY (cpf) REFERENCES humano(cpf),
FOREIGN KEY (meiopagamento_id) REFERENCES meio_pagamento(meiopagamento_id)
);

create table veiculo(
	placa char(8) primary key,
	modelo varchar(20),
	cpf bigint,
	FOREIGN KEY (cpf) REFERENCES humano(cpf)
);

create table email(
	email varchar(60) primary key,
	cpf bigint,
	FOREIGN KEY (cpf) REFERENCES humano (cpf)
);

create table telefone_humano(
	numero bigint,
	cpf bigint,
	FOREIGN KEY (numero) REFERENCES telefone(telefone),
	FOREIGN KEY (cpf) REFERENCES humano (cpf)
);

create table compra(
	refeicao_id int,
	cpf_cliente bigint,
	cpf_entregador bigint,
	meiopagamento_id int,
	placa char(8),
	tempo_espera bigint not null,
	cnpj_restaurante bigint,
	FOREIGN KEY (cnpj_restaurante) REFERENCES restaurante_sede(cnpj),
	FOREIGN KEY (refeicao_id) REFERENCES refeicao (refeicao_id),
	FOREIGN KEY (cpf_cliente) REFERENCES humano (cpf),
	FOREIGN KEY (cpf_entregador) REFERENCES humano (cpf),
	FOREIGN KEY (meiopagamento_id) REFERENCES meio_pagamento (meiopagamento_id),
	FOREIGN KEY (placa) REFERENCES veiculo (placa)
);

create table meio_pagamento (
meiopagamento_id
);

create table dinheiro (
troco numeric,
meiopagamento_id int,
FOREIGN KEY (meiopagamento_id) REFERENCES meio_pagamento(meiopagamento_id) 

);